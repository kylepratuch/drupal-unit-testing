<?php
//These are unit tests:
class NumbersInWordsTestCase extends DrupalUnitTestCase {

  public static function getInfo() {
    return array(
      'name' => 'Numbers in Words unit tests',
      'description' => 'Test that Numbers in Words works properly',
      'group' => 'Examples',
    );
  }

  function testNumbersInWords() {
    //Describe:
    $description = 'Translates a single digit number.';
    //Arrange:
    $input = 1;
    //Act:
    $result = translate_number($input);
    //Assert:
    $expected_output = 'one';
    $this->assertEqual($result, $expected_output, $description);

    //Describe:
    $description = 'Translates a double digit number.';
    //Arrange:
    $input = 10;
    //Act:
    $result = translate_number($input);
    //Assert:
    $expected_output = 'ten';
    $this->assertEqual($result, $expected_output, $description);

    //Describe:
    $description = 'Translates a three digit number.';
    //Arrange:
    $input = 222;
    //Act:
    $result = translate_number($input);
    //Assert:
    $expected_output = 'two hundred twenty-two';
    $this->assertEqual($result, $expected_output, $description);
  }
}

//This is a functional test:
class NumbersInWordsTests extends DrupalWebTestCase {

  //Arrange
  public static function getInfo() {
    return array(
      'name' => 'Numbers to Words Display Tests',
      'description' => 'Tests for the numbers to words display.',
      'group' => 'Examples',
    );
  }

  public function setUp() {
    parent::setUp(array('numbers_in_words'));
  }

  public function testNumbersInWords() {
    //Act
    translate_number('blah');
    $this->drupalGet('numbers_in_words');
    //Assert
    $this->assertText('Please provide a number between zero and one trillion', 'The text is displaying correctly.');
  }
}
